{"CVE Code": "CVE-2014-4715", "Description": "Yann Collet LZ4 before r119, when used on certain 32-bit platforms that allocate memory beyond 0x80000000, does not properly detect integer overflows, which allows context-dependent attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via a crafted Literal Run, a different vulnerability than CVE-2014-4611.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2014-4715", "Vulnerability Categories": "Memory Corruption;Denial of service", "Affected Products": "\nYann Collet\u00bbLZ4Versions  up to, including, (<=) r118cpe:2.3:a:yann_collet:lz4:*:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.56% Probability of exploitation activity in the next 30 days\n~ 75 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2023-03-07  1.02%  0.56%  -0.46 ", "CVSS Scores": "5.0", "CWE": [{"CWE_ID": "CWE-189", "CWE_link": "/cwe-details/189/cwe.html"}], "Reference": [{"ref_link": "http://fastcompression.blogspot.fr/2014/07/software-vulnerabilities-how-it-works.html", "ref_desc": "RealTime Data Compression", "ref_cve_link": "N/A"}, {"ref_link": "https://code.google.com/p/lz4/source/detail?r=119", "ref_desc": "GitHub - lz4/lz4: Extremely Fast Compression algorithm", "ref_cve_link": "N/A"}, {"ref_link": "https://code.google.com/p/lz4/issues/detail?id=134", "ref_desc": "Avoid out-of-bounds reading by mtopolnik \u00b7 Pull Request #134 \u00b7 lz4/lz4 \u00b7 GitHub", "ref_cve_link": "N/A"}, {"ref_link": "http://blog.securitymouse.com/2014/07/i-was-wrong-proving-lz4-exploitable.html", "ref_desc": "The Mouse Trap: I Was Wrong - Proving LZ4 Exploitable With Less Than 4MB", "ref_cve_link": "N/A"}]}