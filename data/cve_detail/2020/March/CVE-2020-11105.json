{"CVE Code": "CVE-2020-11105", "Description": "An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr values, using the raw pointer address as a unique identifier. This becomes problematic if an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated at the same address. Serialization fidelity thereby becomes dependent upon memory layout. In short, serialized std::shared_ptr variables cannot always be expected to serialize back into their original values. This can have any number of consequences, depending on the context within which this manifests.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2020-11105", "Vulnerability Categories": "N/A", "Affected Products": "\nUSC\u00bbCerealVersions  up to, including, (<=) 1.3.0cpe:2.3:a:usc:cereal:*:*:*:*:*:*:*:*Matching versions", "EPSS Score": "1.22% Probability of exploitation activity in the next 30 days\n~ 85 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-12-17  0.66%  1.22%  +0.56 \n 2  2024-03-06  0.52%  0.66%  +0.14 \n 3  2023-08-03  0.49%  0.52%  +0.03 \n 4  2023-03-07  0.89%  0.49%  -0.40 ", "CVSS Scores": "7.5", "CWE": [{"CWE_ID": "CWE-763 Release of Invalid Pointer or Reference", "CWE_link": "/cwe-details/763/Release-of-Invalid-Pointer-or-Reference.html"}], "Reference": [{"ref_link": "https://github.com/USCiLab/cereal/issues/636", "ref_desc": "std::shared_ptr serialization asymmetry (depends on memory layout) \u00b7 Issue #636 \u00b7 USCiLab/cereal \u00b7 GitHubExploit;Third Party Advisory", "ref_cve_link": "N/A"}]}