{"CVE Code": "CVE-2020-15254", "Description": "Crossbeam is a set of tools for concurrent programming. In crossbeam-channel before version 0.4.4, the bounded channel incorrectly assumes that `Vec::from_iter` has allocated capacity that same as the number of iterator elements. `Vec::from_iter` does not actually guarantee that and may allocate extra memory. The destructor of the `bounded` channel reconstructs `Vec` from the raw pointer based on the incorrect assumes described above. This is unsound and causing deallocation with the incorrect capacity when `Vec::from_iter` has allocated different sizes with the number of iterator elements. This has been fixed in crossbeam-channel 0.4.4.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2020-15254", "Vulnerability Categories": "Overflow", "Affected Products": "\nCrossbeam Project\u00bbCrossbeamVersions  before (<) 0.4.4cpe:2.3:a:crossbeam_project:crossbeam:*:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.53% Probability of exploitation activity in the next 30 days\n~ 77 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-12-17  0.70%  0.53%  -0.17 \n 2  2024-07-03  0.60%  0.70%  +0.10 \n 3  2024-05-30  0.49%  0.60%  +0.11 \n 4  2023-07-02  0.45%  0.49%  +0.05 \n 5  2023-05-23  0.37%  0.45%  +0.08 \n 6  2023-03-07  1.02%  0.37%  -0.65 ", "CVSS Scores": "7.5", "CWE": [{"CWE_ID": "CWE-119 Improper Restriction of Operations within the Bounds of a Memory Buffer", "CWE_link": "/cwe-details/119/Improper-Restriction-of-Operations-within-the-Bounds-of-a-Me.html"}, {"CWE_ID": "CWE-401 Missing Release of Memory after Effective Lifetime", "CWE_link": "/cwe-details/401/Missing-Release-of-Memory-after-Effective-Lifetime.html"}], "Reference": [{"ref_link": "https://github.com/RustSec/advisory-db/pull/425", "ref_desc": "Add advisory for UB in crossbeam-channel 0.4.3 by taiki-e \u00b7 Pull Request #425 \u00b7 RustSec/advisory-db \u00b7 GitHubPatch;Third Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/crossbeam-rs/crossbeam/pull/533", "ref_desc": "Use Box<[T]> instead of Vec<T> to initialize and drop ArrayQueue by caelunshun \u00b7 Pull Request #533 \u00b7 crossbeam-rs/crossbeam \u00b7 GitHubExploit;Patch;Third Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-v5m7-53cv-f3hx", "ref_desc": "Undefined Behavior in bounded channel \u00b7 Advisory \u00b7 crossbeam-rs/crossbeam \u00b7 GitHubThird Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/crossbeam-rs/crossbeam/issues/539", "ref_desc": "Memory Leak in crossbeam-queue ArrayQueue? (Latest git only, ver0.2.3 is not effected) \u00b7 Issue #539 \u00b7 crossbeam-rs/crossbeam \u00b7 GitHubExploit;Third Party Advisory", "ref_cve_link": "N/A"}]}