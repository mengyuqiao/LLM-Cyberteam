{"CVE Code": "CVE-2020-26243", "Description": "Nanopb is a small code-size Protocol Buffers implementation. In Nanopb before versions 0.4.4 and 0.3.9.7, decoding specifically formed message can leak memory if dynamic allocation is enabled and an oneof field contains a static submessage that contains a dynamic field, and the message being decoded contains the submessage multiple times. This is rare in normal messages, but it is a concern when untrusted data is parsed. This is fixed in versions 0.3.9.7 and 0.4.4. The following workarounds are available: 1) Set the option `no_unions` for the oneof field. This will generate fields as separate instead of C union, and avoids triggering the problematic code. 2) Set the type of the submessage field inside oneof to `FT_POINTER`. This way the whole submessage will be dynamically allocated and the problematic code is not executed. 3) Use an arena allocator for nanopb, to make sure all memory can be released afterwards.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2020-26243", "Vulnerability Categories": "Overflow;Input validation", "Affected Products": "\nNanopb Project\u00bbNanopbVersions  from including (>=) 0.4.0andbefore (<) 0.4.4cpe:2.3:a:nanopb_project:nanopb:*:*:*:*:*:*:*:*Matching versions\nNanopb Project\u00bbNanopbVersions  before (<) 0.3.9.7cpe:2.3:a:nanopb_project:nanopb:*:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.40% Probability of exploitation activity in the next 30 days\n~ 73 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-12-17  0.34%  0.40%  +0.06 \n 2  2024-05-17  0.24%  0.34%  +0.10 \n 3  2023-08-11  0.21%  0.24%  +0.03 \n 4  2023-07-02  0.18%  0.21%  +0.03 \n 5  2023-03-07  1.02%  0.18%  -0.84 ", "CVSS Scores": "4.3", "CWE": [{"CWE_ID": "CWE-20 Improper Input Validation", "CWE_link": "/cwe-details/20/Improper-Input-Validation.html"}, {"CWE_ID": "CWE-119 Improper Restriction of Operations within the Bounds of a Memory Buffer", "CWE_link": "/cwe-details/119/Improper-Restriction-of-Operations-within-the-Bounds-of-a-Me.html"}], "Reference": [{"ref_link": "https://github.com/nanopb/nanopb/security/advisories/GHSA-85rr-4rh9-hhwh", "ref_desc": "Oneof fields with PB_ENABLE_MALLOC can leak memory \u00b7 Advisory \u00b7 nanopb/nanopb \u00b7 GitHubThird Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/nanopb/nanopb/blob/2b48a361786dfb1f63d229840217a93aae064667/CHANGELOG.txt", "ref_desc": "nanopb/CHANGELOG.txt at 2b48a361786dfb1f63d229840217a93aae064667 \u00b7 nanopb/nanopb \u00b7 GitHubRelease Notes;Third Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/nanopb/nanopb/commit/4fe23595732b6f1254cfc11a9b8d6da900b55b0c", "ref_desc": "Fix memory leak with oneofs and PB_ENABLE_MALLOC (#615) \u00b7 nanopb/nanopb@4fe2359 \u00b7 GitHubPatch;Third Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/nanopb/nanopb/issues/615", "ref_desc": "Memory leak when parsing a protobuf message with duplicate fields \u00b7 Issue #615 \u00b7 nanopb/nanopb \u00b7 GitHubExploit;Patch;Third Party Advisory", "ref_cve_link": "N/A"}]}