{"CVE Code": "CVE-2019-6976", "Description": "libvips before 8.7.4 generates output images from uninitialized memory locations when processing corrupted input image data because iofuncs/memory.c does not zero out allocated memory. This can result in leaking raw process memory contents through the output image.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2019-6976", "Vulnerability Categories": "N/A", "Affected Products": "\nLibvips\u00bbLibvipsVersions  before (<) 8.7.4cpe:2.3:a:libvips:libvips:*:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.16% Probability of exploitation activity in the next 30 days\n~ 53 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-12-17  0.14%  0.16%  +0.02 \n 2  2024-01-20  0.10%  0.14%  +0.04 \n 3  2023-03-07  0.95%  0.10%  -0.85 ", "CVSS Scores": "5.0", "CWE": [{"CWE_ID": "CWE-908 Use of Uninitialized Resource", "CWE_link": "/cwe-details/908/Use-of-Uninitialized-Resource.html"}], "Reference": [{"ref_link": "https://github.com/libvips/libvips/releases/tag/v8.7.4", "ref_desc": "Release v8.7.4 \u00b7 libvips/libvips \u00b7 GitHubThird Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://blog.silentsignal.eu/2019/04/18/drop-by-drop-bleeding-through-libvips/", "ref_desc": "Drop-by-Drop: Bleeding through libvips \u2013 Silent Signal TechblogTechnical Description;Third Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/libvips/libvips/commit/00622428bda8d7521db8d74260b519fa41d69d0a", "ref_desc": "zero memory on malloc \u00b7 libvips/libvips@0062242 \u00b7 GitHubPatch;Third Party Advisory", "ref_cve_link": "N/A"}]}