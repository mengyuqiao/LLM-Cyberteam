{"CVE Code": "CVE-2021-29508", "Description": "Due to how Wire handles type information in its serialization format, malicious payloads can be passed to a deserializer. e.g. using a surrogate on the sender end, an attacker can pass information about a different type for the receiving end. And by doing so allowing the serializer to create any type on the deserializing end. This is the same issue that exists for .NET BinaryFormatter https://docs.microsoft.com/en-us/visualstudio/code-quality/ca2300?view=vs-2019. This also applies to the fork of Wire.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2021-29508", "Vulnerability Categories": "N/A", "Affected Products": "\nAsynkron\u00bbWirecpe:2.3:a:asynkron:wire:*:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.10% Probability of exploitation activity in the next 30 days\n~ 43 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-12-17  0.12%  0.10%  -0.02 \n 2  2024-01-25  0.10%  0.12%  +0.02 \n 3  2023-12-16  0.09%  0.10%  +0.01 \n 4  2023-03-07  0.89%  0.09%  -0.80 ", "CVSS Scores": "6.4", "CWE": [{"CWE_ID": "CWE-502 Deserialization of Untrusted Data", "CWE_link": "/cwe-details/502/Deserialization-of-Untrusted-Data.html"}], "Reference": [{"ref_link": "https://github.com/AsynkronIT/Wire/security/advisories/GHSA-hpw7-3vq3-mmv6", "ref_desc": "Do not use Wire - Insecure deserialization \u00b7 Advisory \u00b7 AsynkronIT/Wire \u00b7 GitHubExploit;Third Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://www.nuget.org/packages/Wire/", "ref_desc": "NuGet Gallery | Wire 1.0.0Third Party Advisory", "ref_cve_link": "N/A"}]}