{"CVE Code": "CVE-2022-39293", "Description": "Azure RTOS USBX is a high-performance USB host, device, and on-the-go (OTG) embedded stack, that is fully integrated with Azure RTOS ThreadX. The case is, in [_ux_host_class_pima_read](https://github.com/azure-rtos/usbx/blob/master/common/usbx_host_classes/src/ux_host_class_pima_read.c), there is data length from device response, returned in the very first packet, and read by [L165 code](https://github.com/azure-rtos/usbx/blob/082fd9db09a3669eca3358f10b8837a5c1635c0b/common/usbx_host_classes/src/ux_host_class_pima_read.c#L165), as header_length. Then in [L178 code](https://github.com/azure-rtos/usbx/blob/082fd9db09a3669eca3358f10b8837a5c1635c0b/common/usbx_host_classes/src/ux_host_class_pima_read.c#L178), there is a \u201cif\u201d branch, which check the expression of \u201c(header_length - UX_HOST_CLASS_PIMA_DATA_HEADER_SIZE) > data_length\u201d where if header_length is smaller than UX_HOST_CLASS_PIMA_DATA_HEADER_SIZE, calculation could overflow and then [L182 code](https://github.com/azure-rtos/usbx/blob/082fd9db09a3669eca3358f10b8837a5c1635c0b/common/usbx_host_classes/src/ux_host_class_pima_read.c#L182) the calculation of data_length is also overflow, this way the later [while loop start from L192](https://github.com/azure-rtos/usbx/blob/082fd9db09a3669eca3358f10b8837a5c1635c0b/common/usbx_host_classes/src/ux_host_class_pima_read.c#L192) can move data_pointer to unexpected address and cause write buffer overflow. The fix has been included in USBX release [6.1.12](https://github.com/azure-rtos/usbx/releases/tag/v6.1.12_rel). The following can be used as a workaround: Add check of `header_length`: 1. It must be greater than `UX_HOST_CLASS_PIMA_DATA_HEADER_SIZE`. 1. It should be greater or equal to the current returned data length (`transfer_request -> ux_transfer_request_actual_length`).", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2022-39293", "Vulnerability Categories": "Overflow", "Affected Products": "\nMicrosoft\u00bbAzure Rtos UsbxVersions  before (<) 6.1.12cpe:2.3:o:microsoft:azure_rtos_usbx:*:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.31% Probability of exploitation activity in the next 30 days\n~ 70 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-12-17  0.34%  0.31%  -0.03 \n 2  2024-10-26  0.29%  0.34%  +0.05 \n 3  2024-05-05  0.23%  0.29%  +0.06 \n 4  2024-03-25  0.19%  0.23%  +0.04 \n 5  2023-12-23  0.19%  0.19%  0.00 \n 6  2023-11-15  0.17%  0.19%  +0.02 \n 7  2023-10-20  0.24%  0.17%  -0.07 \n 8  2023-09-25  0.23%  0.24%  +0.01 \n 9  2023-09-13  0.29%  0.23%  -0.06 \n 10  2023-09-02  0.29%  0.29%  -0.01 \n 11  2023-08-20  0.16%  0.29%  +0.14 \n 12  2023-08-09  0.20%  0.16%  -0.04 \n 13  2023-07-17  0.19%  0.20%  +0.01 \n 14  2023-05-22  0.16%  0.19%  +0.03 \n 15  2023-05-09  0.16%  0.16%  0.00 \n 16  2023-03-18  0.16%  0.16%  +0.00 \n 17  2023-03-07  2.84%  0.16%  -2.69 ", "CVSS Scores": "9.8", "CWE": [{"CWE_ID": "CWE-191 Integer Underflow (Wrap or Wraparound)", "CWE_link": "/cwe-details/191/Integer-Underflow-Wrap-or-Wraparound-.html"}], "Reference": [{"ref_link": "https://github.com/azure-rtos/usbx/releases/tag/v6.1.12_rel", "ref_desc": "Release Azure RTOS 6.1.12 \u00b7 azure-rtos/usbx \u00b7 GitHubRelease Notes;Third Party AdvisoryCVEs referencing this url", "ref_cve_link": "https://www.cvedetails.com/reference-url-info/4h_WJQIopIgYhXXMAvFzUcw0kec.html"}, {"ref_link": "https://github.com/azure-rtos/usbx/security/advisories/GHSA-gg76-h537-xq48", "ref_desc": "Azure RTOS USBX Host PIMA read integer underflow with buffer overflow \u00b7 Advisory \u00b7 azure-rtos/usbx \u00b7 GitHubPatch;Third Party Advisory", "ref_cve_link": "N/A"}]}