{"CVE Code": "CVE-2022-21803", "Description": "This affects the package nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2022-21803", "Vulnerability Categories": "N/A", "Affected Products": "\nNconf Project\u00bbNconf\u00bbForNode.jsVersions  before (<) 0.11.4cpe:2.3:a:nconf_project:nconf:*:*:*:*:*:node.js:*:*Matching versions", "EPSS Score": "0.19% Probability of exploitation activity in the next 30 days\n~ 57 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-12-17  0.19%  0.19%  +0.00 \n 2  2024-11-16  0.16%  0.19%  +0.02 \n 3  2024-07-04  0.13%  0.16%  +0.04 \n 4  2023-11-03  0.11%  0.13%  +0.02 \n 5  2023-09-23  0.10%  0.11%  +0.01 \n 6  2023-05-15  0.13%  0.10%  -0.03 \n 7  2023-04-19  0.06%  0.13%  +0.07 \n 8  2023-03-13  0.05%  0.06%  +0.01 \n 9  2023-03-07  1.02%  0.05%  -0.96 ", "CVSS Scores": "5.0", "CWE": [{"CWE_ID": "CWE-1321 Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')", "CWE_link": "/cwe-details/1321/Improperly-Controlled-Modification-of-Object-Prototype-Attri.html"}], "Reference": [{"ref_link": "https://snyk.io/vuln/SNYK-JS-NCONF-2395478", "ref_desc": "Prototype Pollution in nconf | CVE-2022-21803 | SnykExploit;Third Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2632450", "ref_desc": "Prototype Pollution in org.webjars.npm:nconf | CVE-2022-21803 | SnykExploit;Third Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/indexzero/nconf/releases/tag/v0.11.4", "ref_desc": "Release v0.11.4 \u00b7 indexzero/nconf \u00b7 GitHubRelease Notes;Third Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/indexzero/nconf/pull/397", "ref_desc": "fix(security): prevent prototype pollution in memory store by mhamann \u00b7 Pull Request #397 \u00b7 indexzero/nconf \u00b7 GitHubIssue Tracking;Patch;Third Party Advisory", "ref_cve_link": "N/A"}]}