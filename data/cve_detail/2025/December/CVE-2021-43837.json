{"CVE Code": "CVE-2021-43837", "Description": "vault-cli is a configurable command-line interface tool (and python library) to interact with Hashicorp Vault. In versions before 3.0.0 vault-cli features the ability for rendering templated values. When a secret starts with the prefix `!template!`, vault-cli interprets the rest of the contents of the secret as a Jinja2 template. Jinja2 is a powerful templating engine and is not designed to safely render arbitrary templates. An attacker controlling a jinja2 template rendered on a machine can trigger arbitrary code, making this a Remote Code Execution (RCE) risk. If the content of the vault can be completely trusted, then this is not a problem. Otherwise, if your threat model includes cases where an attacker can manipulate a secret value read from the vault using vault-cli, then this vulnerability may impact you. In 3.0.0, the code related to interpreting vault templated secrets has been removed entirely. Users are advised to upgrade as soon as possible. For users unable to upgrade a workaround does exist. Using the environment variable `VAULT_CLI_RENDER=false` or the flag `--no-render` (placed between `vault-cli` and the subcommand, e.g. `vault-cli --no-render get-all`) or adding `render: false` to the vault-cli configuration yaml file disables rendering and removes the vulnerability. Using the python library, you can use: `vault_cli.get_client(render=False)` when creating your client to get a client that will not render templated secrets and thus operates securely.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2021-43837", "Vulnerability Categories": "Execute code", "Affected Products": "\nVault-cli Project\u00bbVault-cli\u00bbForPythonVersions  from including (>=) 0.7.0andbefore (<) 3.0.0cpe:2.3:a:vault-cli_project:vault-cli:*:*:*:*:*:python:*:*Matching versions", "EPSS Score": "9.55% Probability of exploitation activity in the next 30 days\n~ 92 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2025-03-30  12.78%  9.55%  -3.22 \n 2  2025-03-29  9.55%  12.78%  +3.22 \n 3  2025-03-17  0.51%  9.55%  +9.04 \n 4  2024-12-17  0.53%  0.51%  -0.02 \n 5  2024-03-09  0.41%  0.53%  +0.12 \n 6  2023-08-07  0.34%  0.41%  +0.07 \n 7  2023-07-24  0.28%  0.34%  +0.06 \n 8  2023-07-09  0.21%  0.28%  +0.07 \n 9  2023-05-29  0.21%  0.21%  0.00 \n 10  2023-03-07  0.89%  0.21%  -0.68 ", "CVSS Scores": "9.0", "CWE": [{"CWE_ID": "CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')", "CWE_link": "/cwe-details/74/Improper-Neutralization-of-Special-Elements-in-Output-Used-b.html"}, {"CWE_ID": "CWE-94 Improper Control of Generation of Code ('Code Injection')", "CWE_link": "/cwe-details/94/Improper-Control-of-Generation-of-Code-Code-Injection-.html"}], "Reference": [{"ref_link": "https://podalirius.net/en/publications/grehack-2021-optimizing-ssti-payloads-for-jinja2/", "ref_desc": "GreHack 2021 - Optimizing Server Side Template Injections payloads for jinja2 \u00b7 PodaliriusExploit;Third Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/peopledoc/vault-cli/security/advisories/GHSA-q34h-97wf-8r8j", "ref_desc": "vault-cli: possible RCE when reading user-defined data \u00b7 Advisory \u00b7 peopledoc/vault-cli \u00b7 GitHubExploit;Mitigation;Third Party Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/peopledoc/vault-cli/commit/3ba3955887fd6b7d4d646c8b260f21cebf5db852", "ref_desc": "Merge pull request #198 from peopledoc/templates \u00b7 peopledoc/vault-cli@3ba3955 \u00b7 GitHubPatch;Third Party Advisory", "ref_cve_link": "N/A"}]}