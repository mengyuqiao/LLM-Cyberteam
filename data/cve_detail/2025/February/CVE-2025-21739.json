{"CVE Code": "CVE-2025-21739", "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: core: Fix use-after free in init error and remove paths\n\ndevm_blk_crypto_profile_init() registers a cleanup handler to run when\nthe associated (platform-) device is being released. For UFS, the\ncrypto private data and pointers are stored as part of the ufs_hba's\ndata structure 'struct ufs_hba::crypto_profile'. This structure is\nallocated as part of the underlying ufshcd and therefore Scsi_host\nallocation.\n\nDuring driver release or during error handling in ufshcd_pltfrm_init(),\nthis structure is released as part of ufshcd_dealloc_host() before the\n(platform-) device associated with the crypto call above is released.\nOnce this device is released, the crypto cleanup code will run, using\nthe just-released 'struct ufs_hba::crypto_profile'. This causes a\nuse-after-free situation:\n\n  Call trace:\n   kfree+0x60/0x2d8 (P)\n   kvfree+0x44/0x60\n   blk_crypto_profile_destroy_callback+0x28/0x70\n   devm_action_release+0x1c/0x30\n   release_nodes+0x6c/0x108\n   devres_release_all+0x98/0x100\n   device_unbind_cleanup+0x20/0x70\n   really_probe+0x218/0x2d0\n\nIn other words, the initialisation code flow is:\n\n  platform-device probe\n    ufshcd_pltfrm_init()\n      ufshcd_alloc_host()\n        scsi_host_alloc()\n          allocation of struct ufs_hba\n          creation of scsi-host devices\n    devm_blk_crypto_profile_init()\n      devm registration of cleanup handler using platform-device\n\nand during error handling of ufshcd_pltfrm_init() or during driver\nremoval:\n\n  ufshcd_dealloc_host()\n    scsi_host_put()\n      put_device(scsi-host)\n        release of struct ufs_hba\n  put_device(platform-device)\n    crypto cleanup handler\n\nTo fix this use-after free, change ufshcd_alloc_host() to register a\ndevres action to automatically cleanup the underlying SCSI device on\nufshcd destruction, without requiring explicit calls to\nufshcd_dealloc_host(). This way:\n\n    * the crypto profile and all other ufs_hba-owned resources are\n      destroyed before SCSI (as they've been registered after)\n    * a memleak is plugged in tc-dwc-g210-pci.c remove() as a\n      side-effect\n    * EXPORT_SYMBOL_GPL(ufshcd_dealloc_host) can be removed fully as\n      it's not needed anymore\n    * no future drivers using ufshcd_alloc_host() could ever forget\n      adding the cleanup", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2025-21739", "Vulnerability Categories": "Memory Corruption", "Affected Products": "\nLinux\u00bbLinux KernelVersions  from including (>=) 5.12andbefore (<) 6.12.14cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.13andbefore (<) 6.13.3cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.14UpdateRC1cpe:2.3:o:linux:linux_kernel:6.14:rc1:*:*:*:*:*:*Matching versions", "EPSS Score": "0.02% Probability of exploitation activity in the next 30 days\n~ 2 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2025-03-17  0.05%  0.02%  -0.03 ", "CVSS Scores": "7.8", "CWE": [{"CWE_ID": "CWE-416 Use After Free", "CWE_link": "/cwe-details/416/Use-After-Free.html"}], "Reference": [{"ref_link": "https://git.kernel.org/stable/c/0c77c0d754fe83cb154715fcfec6c3faef94f207", "ref_desc": "Patch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/9c185beae09a3eb85f54777edafa227f7e03075d", "ref_desc": "Patch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/f8fb2403ddebb5eea0033d90d9daae4c88749ada", "ref_desc": "Patch", "ref_cve_link": "N/A"}]}