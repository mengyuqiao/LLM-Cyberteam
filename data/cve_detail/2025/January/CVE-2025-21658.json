{"CVE Code": "CVE-2025-21658", "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: avoid NULL pointer dereference if no valid extent tree\n\n[BUG]\nSyzbot reported a crash with the following call trace:\n\n  BTRFS info (device loop0): scrub: started on devid 1\n  BUG: kernel NULL pointer dereference, address: 0000000000000208\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 106e70067 P4D 106e70067 PUD 107143067 PMD 0\n  Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI\n  CPU: 1 UID: 0 PID: 689 Comm: repro Kdump: loaded Tainted: G           O       6.13.0-rc4-custom+ #206\n  Tainted: [O]=OOT_MODULE\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS unknown 02/02/2022\n  RIP: 0010:find_first_extent_item+0x26/0x1f0 [btrfs]\n  Call Trace:\n   <TASK>\n   scrub_find_fill_first_stripe+0x13d/0x3b0 [btrfs]\n   scrub_simple_mirror+0x175/0x260 [btrfs]\n   scrub_stripe+0x5d4/0x6c0 [btrfs]\n   scrub_chunk+0xbb/0x170 [btrfs]\n   scrub_enumerate_chunks+0x2f4/0x5f0 [btrfs]\n   btrfs_scrub_dev+0x240/0x600 [btrfs]\n   btrfs_ioctl+0x1dc8/0x2fa0 [btrfs]\n   ? do_sys_openat2+0xa5/0xf0\n   __x64_sys_ioctl+0x97/0xc0\n   do_syscall_64+0x4f/0x120\n   entry_SYSCALL_64_after_hwframe+0x76/0x7e\n   </TASK>\n\n[CAUSE]\nThe reproducer is using a corrupted image where extent tree root is\ncorrupted, thus forcing to use \"rescue=all,ro\" mount option to mount the\nimage.\n\nThen it triggered a scrub, but since scrub relies on extent tree to find\nwhere the data/metadata extents are, scrub_find_fill_first_stripe()\nrelies on an non-empty extent root.\n\nBut unfortunately scrub_find_fill_first_stripe() doesn't really expect\nan NULL pointer for extent root, it use extent_root to grab fs_info and\ntriggered a NULL pointer dereference.\n\n[FIX]\nAdd an extra check for a valid extent root at the beginning of\nscrub_find_fill_first_stripe().\n\nThe new error path is introduced by 42437a6386ff (\"btrfs: introduce\nmount option rescue=ignorebadroots\"), but that's pretty old, and later\ncommit b979547513ff (\"btrfs: scrub: introduce helper to find and fill\nsector info for a scrub_stripe\") changed how we do scrub.\n\nSo for kernels older than 6.6, the fix will need manual backport.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2025-21658", "Vulnerability Categories": "Memory Corruption", "Affected Products": "\nLinux\u00bbLinux KernelVersions  from including (>=) 6.7andbefore (<) 6.12.10cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 5.11andbefore (<) 6.6.72cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.13UpdateRC1cpe:2.3:o:linux:linux_kernel:6.13:rc1:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.13UpdateRC2cpe:2.3:o:linux:linux_kernel:6.13:rc2:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.13UpdateRC3cpe:2.3:o:linux:linux_kernel:6.13:rc3:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.13UpdateRC4cpe:2.3:o:linux:linux_kernel:6.13:rc4:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.13UpdateRC5cpe:2.3:o:linux:linux_kernel:6.13:rc5:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.13UpdateRC6cpe:2.3:o:linux:linux_kernel:6.13:rc6:*:*:*:*:*:*Matching versions", "EPSS Score": "0.02% Probability of exploitation activity in the next 30 days\n~ 3 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2025-03-17  0.04%  0.02%  -0.02 \n 2  2025-01-23  0.05%  0.04%  0.00 ", "CVSS Scores": "5.5", "CWE": [{"CWE_ID": "CWE-476 NULL Pointer Dereference", "CWE_link": "/cwe-details/476/NULL-Pointer-Dereference.html"}], "Reference": [{"ref_link": "https://git.kernel.org/stable/c/6aecd91a5c5b68939cf4169e32bc49f3cd2dd329", "ref_desc": "btrfs: avoid NULL pointer dereference if no valid extent tree - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/24b85a8b0310e0144da9ab30be42e87e6476638a", "ref_desc": "btrfs: avoid NULL pointer dereference if no valid extent tree - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/aee5f69f3e6cd82bfefaca1b70b40b6cd8f3f784", "ref_desc": "btrfs: avoid NULL pointer dereference if no valid extent tree - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}]}