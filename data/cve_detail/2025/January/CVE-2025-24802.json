{"CVE Code": "CVE-2025-24802", "Description": "Plonky2 is a SNARK implementation based on techniques from PLONK and FRI. Lookup tables, whose length is not divisible by 26 = floor(num_routed_wires / 3) always include the 0 -> 0 input-output pair. Thus a malicious prover can always prove that f(0) = 0 for any lookup table f (unless its length happens to be divisible by 26). The cause of problem is that the LookupTableGate-s are padded with zeros. A workaround from the user side is to extend the table (by repeating some entries) so that its length becomes divisible by 26. This vulnerability is fixed in 1.0.1.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2025-24802", "Vulnerability Categories": "N/A", "Affected Products": "N/A", "EPSS Score": "0.02% Probability of exploitation activity in the next 30 days\n~ 3 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2025-03-17  0.05%  0.02%  -0.02 ", "CVSS Scores": "8.6", "CWE": [{"CWE_ID": "CWE-1240 Use of a Cryptographic Primitive with a Risky Implementation", "CWE_link": "/cwe-details/1240/Use-of-a-Cryptographic-Primitive-with-a-Risky-Implementation.html"}], "Reference": [{"ref_link": "https://github.com/0xPolygonZero/plonky2/commit/091047f7f10cae082716f3738ad59a583835f7b6", "ref_desc": "Fix padding in LookupTableGate (#1656) \u00b7 0xPolygonZero/plonky2@091047f \u00b7 GitHub", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/0xPolygonZero/plonky2/security/advisories/GHSA-hj49-h7fq-px5h", "ref_desc": "", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/0xPolygonZero/plonky2/blob/main/plonky2/src/plonk/prover.rs#L97", "ref_desc": "plonky2/plonky2/src/plonk/prover.rs at main \u00b7 0xPolygonZero/plonky2 \u00b7 GitHub", "ref_cve_link": "N/A"}]}