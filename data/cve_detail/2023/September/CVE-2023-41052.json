{"CVE Code": "CVE-2023-41052", "Description": "Vyper is a Pythonic Smart Contract Language. In affected versions the order of evaluation of the arguments of the builtin functions `uint256_addmod`, `uint256_mulmod`, `ecadd` and `ecmul` does not follow source order. This behaviour is problematic when the evaluation of one of the arguments produces side effects that other arguments depend on. A patch is currently being developed on pull request #3583. When using builtins from the list above, users should make sure that the arguments of the expression do not produce side effects or, if one does, that no other argument is dependent on those side effects.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2023-41052", "Vulnerability Categories": "N/A", "Affected Products": "\nVyperlang\u00bbVyper\u00bbForPythonVersions  up to, including, (<=) 0.3.9cpe:2.3:a:vyperlang:vyper:*:*:*:*:*:python:*:*Matching versions", "EPSS Score": "0.08% Probability of exploitation activity in the next 30 days\n~ 33 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-10-06  0.07%  0.08%  +0.01 \n 2  2024-09-10  0.05%  0.07%  +0.01 \n 3  2024-08-04  0.05%  0.05%  +0.01 \n 4  2023-09-09  0.04%  0.05%  +0.00 ", "CVSS Scores": "5.3", "CWE": [{"CWE_ID": "CWE-670 Always-Incorrect Control Flow Implementation", "CWE_link": "/cwe-details/670/Always-Incorrect-Control-Flow-Implementation.html"}], "Reference": [{"ref_link": "https://github.com/vyperlang/vyper/pull/3583", "ref_desc": "fix: order of evaluation for some builtins by charles-cooper \u00b7 Pull Request #3583 \u00b7 vyperlang/vyper \u00b7 GitHubPatch", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/vyperlang/vyper/security/advisories/GHSA-4hg4-9mf5-wxxq", "ref_desc": "incorrect order of evaluation of side effects for some builtins \u00b7 Advisory \u00b7 vyperlang/vyper \u00b7 GitHubExploit;Patch;Third Party Advisory", "ref_cve_link": "N/A"}]}