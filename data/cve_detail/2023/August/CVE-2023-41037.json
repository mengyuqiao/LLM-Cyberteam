{"CVE Code": "CVE-2023-41037", "Description": "OpenPGP.js is a JavaScript implementation of the OpenPGP protocol. In affected versions OpenPGP Cleartext Signed Messages are cryptographically signed messages where the signed text is readable without special tools. These messages typically contain a \"Hash: ...\" header declaring the hash algorithm used to compute the signature digest. OpenPGP.js up to v5.9.0 ignored any data preceding the \"Hash: ...\" texts when verifying the signature. As a result, malicious parties could add arbitrary text to a third-party Cleartext Signed Message, to lead the victim to believe that the arbitrary text was signed. A user or application is vulnerable to said attack vector if it verifies the CleartextMessage by only checking the returned `verified` property, discarding the associated `data` information, and instead _visually trusting_ the contents of the original message. Since `verificationResult.data` would always contain the actual signed data, users and apps that check this information are not vulnerable. Similarly, given a CleartextMessage object, retrieving the data using `getText()` or the `text` field returns only the contents that are considered when verifying the signature. Finally, re-armoring a CleartextMessage object (using `armor()` will also result in a \"sanitised\" version, with the extraneous text being removed. This issue has been addressed in version 5.10.1 (current stable version) which will reject messages when calling `openpgp.readCleartextMessage()` and in version 4.10.11 (legacy version) which will will reject messages when calling `openpgp.cleartext.readArmored()`. Users are advised to upgrade. Users unable to upgrade should check the contents of `verificationResult.data` to see what data was actually signed, rather than visually trusting the contents of the armored message.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2023-41037", "Vulnerability Categories": "N/A", "Affected Products": "\nOpenpgpjs\u00bbOpenpgpjsVersions  before (<) 4.10.11cpe:2.3:a:openpgpjs:openpgpjs:*:*:*:*:*:*:*:*Matching versions\nOpenpgpjs\u00bbOpenpgpjsVersions  from including (>=) 5.0.0andbefore (<) 5.10.0cpe:2.3:a:openpgpjs:openpgpjs:*:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.08% Probability of exploitation activity in the next 30 days\n~ 33 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-09-30  0.07%  0.08%  +0.01 \n 2  2024-09-04  0.05%  0.07%  +0.01 \n 3  2024-07-29  0.05%  0.05%  +0.01 \n 4  2023-09-09  0.04%  0.05%  +0.00 ", "CVSS Scores": "4.3", "CWE": [{"CWE_ID": "CWE-347 Improper Verification of Cryptographic Signature", "CWE_link": "/cwe-details/347/Improper-Verification-of-Cryptographic-Signature.html"}], "Reference": [{"ref_link": "https://github.com/openpgpjs/openpgpjs/security/advisories/GHSA-ch3c-v47x-4pgp", "ref_desc": "Cleartext Signed Message Signature Spoofing \u00b7 Advisory \u00b7 openpgpjs/openpgpjs \u00b7 GitHubExploit;Vendor Advisory", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/openpgpjs/openpgpjs/commit/6b43e02a254853f5ff508ebd1b07541f78b7c566", "ref_desc": "Merge pull request from GHSA-ch3c-v47x-4pgp \u00b7 openpgpjs/openpgpjs@6b43e02 \u00b7 GitHubPatch", "ref_cve_link": "N/A"}]}