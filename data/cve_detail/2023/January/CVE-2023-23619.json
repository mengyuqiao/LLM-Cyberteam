{"CVE Code": "CVE-2023-23619", "Description": "Modelina is a library for generating data models based on inputs such as AsyncAPI, OpenAPI, or JSON Schema documents. Versions prior to 1.0.0 are vulnerable to Code injection. This issue affects anyone who is using the default presets and/or does not handle the functionality themself. This issue has been partially mitigated in version 1.0.0, with the maintainer's GitHub Security Advisory (GHSA) noting \"It is impossible to fully guard against this, because users have access to the original raw information. However, as of version 1, if you only access the constrained models, you will not encounter this issue. Further similar situations are NOT seen as a security issue, but intended behavior.\" The suggested workaround from the maintainers is \"Fully custom presets that change the entire rendering process which can then escape the user input.\"", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2023-23619", "Vulnerability Categories": "N/A", "Affected Products": "\nLfprojects\u00bbModelina\u00bbForNode.jsVersions  before (<) 1.0.0cpe:2.3:a:lfprojects:modelina:*:*:*:*:*:node.js:*:*Matching versions", "EPSS Score": "0.11% Probability of exploitation activity in the next 30 days\n~ 45 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-08-18  0.09%  0.11%  +0.02 \n 2  2024-07-08  0.09%  0.09%  +0.00 \n 3  2024-02-02  0.07%  0.09%  +0.02 \n 4  2023-12-27  0.05%  0.07%  +0.02 \n 5  2023-03-07  0.89%  0.05%  -0.84 ", "CVSS Scores": "8.8", "CWE": [{"CWE_ID": "CWE-94 Improper Control of Generation of Code ('Code Injection')", "CWE_link": "/cwe-details/94/Improper-Control-of-Generation-of-Code-Code-Injection-.html"}], "Reference": [{"ref_link": "https://github.com/asyncapi/modelina/security/advisories/GHSA-4jg2-84c2-pj95", "ref_desc": "Improper Control of Generation of Code ('Code Injection') in @asyncapi/modelina \u00b7 Advisory \u00b7 asyncapi/modelina \u00b7 GitHubExploit;Third Party Advisory", "ref_cve_link": "N/A"}]}