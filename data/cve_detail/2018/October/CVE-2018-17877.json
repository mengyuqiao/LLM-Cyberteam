{"CVE Code": "CVE-2018-17877", "Description": "A lottery smart contract implementation for Greedy 599, an Ethereum gambling game, generates a random value that is predictable via an external contract call. The developer used the extcodesize() function to prevent a malicious contract from being called, but the attacker can bypass it by writing the core code in the constructor of their exploit code. Therefore, it allows attackers to always win and get rewards.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2018-17877", "Vulnerability Categories": "N/A", "Affected Products": "\nGreedy599\u00bbGreedy 599\u00bbVersion:N/Acpe:2.3:a:greedy599:greedy_599:-:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.79% Probability of exploitation activity in the next 30 days\n~ 81 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-12-17  0.59%  0.79%  +0.20 \n 2  2023-07-10  0.41%  0.59%  +0.17 \n 3  2023-03-07  0.89%  0.41%  -0.47 ", "CVSS Scores": "5.0", "CWE": [{"CWE_ID": "CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)", "CWE_link": "/cwe-details/338/Use-of-Cryptographically-Weak-Pseudo-Random-Number-Generator.html"}], "Reference": [{"ref_link": "https://github.com/TEAM-C4B/CVE-LIST/tree/master/CVE-2018-17877", "ref_desc": "CVE-LIST/CVE-2018-17877 at master \u00b7 TEAM-C4B/CVE-LIST \u00b7 GitHubExploit;Third Party Advisory", "ref_cve_link": "N/A"}]}