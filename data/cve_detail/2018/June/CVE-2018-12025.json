{"CVE Code": "CVE-2018-12025", "Description": "The transferFrom function of a smart contract implementation for FuturXE (FXE), an Ethereum ERC20 token, allows attackers to accomplish an unauthorized transfer of digital assets because of a logic error. The developer messed up with the boolean judgment - if the input value is smaller than or equal to allowed value, the transfer session would stop execution by returning false. This makes no sense, because the transferFrom() function should require the transferring value to not exceed the allowed value in the first place. Suppose this function asks for the allowed value to be smaller than the input. Then, the attacker could easily ignore the allowance: after this condition, the `allowed[from][msg.sender] -= value;` would cause an underflow because the allowed part is smaller than the value. The attacker could transfer any amount of FuturXe tokens of any accounts to an appointed account (the `_to` address) because the allowed value is initialized to 0, and the attacker could bypass this restriction even without the victim's private key.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2018-12025", "Vulnerability Categories": "Input validation", "Affected Products": "\nFuturxe\u00bbFuturxe\u00bbVersion:N/Acpe:2.3:a:futurxe:futurxe:-:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.09% Probability of exploitation activity in the next 30 days\n~ 38 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-12-17  0.09%  0.09%  0.00 \n 2  2024-04-20  0.08%  0.09%  +0.01 \n 3  2023-03-07  1.09%  0.08%  -1.00 ", "CVSS Scores": "5.0", "CWE": [{"CWE_ID": "CWE-20 Improper Input Validation", "CWE_link": "/cwe-details/20/Improper-Input-Validation.html"}, {"CWE_ID": "CWE-191 Integer Underflow (Wrap or Wraparound)", "CWE_link": "/cwe-details/191/Integer-Underflow-Wrap-or-Wraparound-.html"}], "Reference": [{"ref_link": "https://medium.com/secbit-media/bugged-smart-contract-f-e-how-could-someone-mess-up-with-boolean-d2251defd6ff", "ref_desc": "Bugged Smart Contract FuturXE: How Could Someone Mess up with Boolean? (CVE-2018\u201312025)Third Party Advisory", "ref_cve_link": "N/A"}]}