{"CVE Code": "CVE-2024-43804", "Description": "Roxy-WI is a web interface for managing Haproxy, Nginx, Apache and Keepalived servers. An OS Command Injection vulnerability allows any authenticated user on the application to execute arbitrary code on the web application server via port scanning functionality. User-supplied input is used without validation when constructing and executing an OS command. User supplied JSON POST data is parsed and if \"id\" JSON key does not exist, JSON value supplied via \"ip\" JSON key is assigned to the \"ip\" variable. Later on, \"ip\" variable which can be controlled by the attacker is used when constructing the cmd and cmd1 strings without any extra validation. Then, server_mod.subprocess_execute function is called on both cmd1 and cmd2. When the definition of the server_mod.subprocess_execute() function is analyzed, it can be seen that subprocess.Popen() is called on the input parameter with shell=True which results in OS Command Injection. This issue has not yet been patched. Users are advised to contact the Roxy-WI to coordinate a fix.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-43804", "Vulnerability Categories": "Execute code", "Affected Products": "\nRoxy-wi\u00bbRoxy-wi\u00bbVersion:8.0cpe:2.3:a:roxy-wi:roxy-wi:8.0:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.06% Probability of exploitation activity in the next 30 days\n~ 29 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-09-07  0.04%  0.06%  +0.02 ", "CVSS Scores": "8.8", "CWE": [{"CWE_ID": "CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "CWE_link": "/cwe-details/78/Improper-Neutralization-of-Special-Elements-used-in-an-OS-Co.html"}], "Reference": [{"ref_link": "https://github.com/roxy-wi/roxy-wi/security/advisories/GHSA-qc52-vwwj-5585", "ref_desc": "OS Command Injection via Port Scan Functionality \u00b7 Advisory \u00b7 roxy-wi/roxy-wi \u00b7 GitHubExploit;Vendor Advisory", "ref_cve_link": "N/A"}]}