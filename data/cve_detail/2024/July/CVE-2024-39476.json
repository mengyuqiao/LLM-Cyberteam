{"CVE Code": "CVE-2024-39476", "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd/raid5: fix deadlock that raid5d() wait for itself to clear MD_SB_CHANGE_PENDING\n\nXiao reported that lvm2 test lvconvert-raid-takeover.sh can hang with\nsmall possibility, the root cause is exactly the same as commit\nbed9e27baf52 (\"Revert \"md/raid5: Wait for MD_SB_CHANGE_PENDING in raid5d\"\")\n\nHowever, Dan reported another hang after that, and junxiao investigated\nthe problem and found out that this is caused by plugged bio can't issue\nfrom raid5d().\n\nCurrent implementation in raid5d() has a weird dependence:\n\n1) md_check_recovery() from raid5d() must hold 'reconfig_mutex' to clear\n   MD_SB_CHANGE_PENDING;\n2) raid5d() handles IO in a deadloop, until all IO are issued;\n3) IO from raid5d() must wait for MD_SB_CHANGE_PENDING to be cleared;\n\nThis behaviour is introduce before v2.6, and for consequence, if other\ncontext hold 'reconfig_mutex', and md_check_recovery() can't update\nsuper_block, then raid5d() will waste one cpu 100% by the deadloop, until\n'reconfig_mutex' is released.\n\nRefer to the implementation from raid1 and raid10, fix this problem by\nskipping issue IO if MD_SB_CHANGE_PENDING is still set after\nmd_check_recovery(), daemon thread will be woken up when 'reconfig_mutex'\nis released. Meanwhile, the hang problem will be fixed as well.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-39476", "Vulnerability Categories": "N/A", "Affected Products": "\nLinux\u00bbLinux KernelVersions  from including (>=) 4.19andbefore (<) 4.19.316cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 5.10andbefore (<) 5.10.219cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.9andbefore (<) 6.9.5cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 5.4andbefore (<) 5.4.278cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.6andbefore (<) 6.6.34cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.1andbefore (<) 6.1.94cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 5.15andbefore (<) 5.15.161cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.04% Probability of exploitation activity in the next 30 days\n~ 5 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-07-09  0.04%  0.04%  0.00 ", "CVSS Scores": "5.5", "CWE": [{"CWE_ID": "CWE-667 Improper Locking", "CWE_link": "/cwe-details/667/Improper-Locking.html"}], "Reference": [{"ref_link": "https://git.kernel.org/stable/c/aa64464c8f4d2ab92f6d0b959a1e0767b829d787", "ref_desc": "md/raid5: fix deadlock that raid5d() wait for itself to clear MD_SB_CHANGE_PENDING - kernel/git/stable/linux.git - Linux kernel stable treeMailing List;Patch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/634ba3c97ec413cb10681c7b196db43ee461ecf4", "ref_desc": "md/raid5: fix deadlock that raid5d() wait for itself to clear MD_SB_CHANGE_PENDING - kernel/git/stable/linux.git - Linux kernel stable treeMailing List;Patch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/cd2538e5af495b3c747e503db346470fc1ffc447", "ref_desc": "md/raid5: fix deadlock that raid5d() wait for itself to clear MD_SB_CHANGE_PENDING - kernel/git/stable/linux.git - Linux kernel stable treeMailing List;Patch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/098d54934814dd876963abfe751c3b1cf7fbe56a", "ref_desc": "md/raid5: fix deadlock that raid5d() wait for itself to clear MD_SB_CHANGE_PENDING - kernel/git/stable/linux.git - Linux kernel stable treeMailing List;Patch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/e332a12f65d8fed8cf63bedb4e9317bb872b9ac7", "ref_desc": "md/raid5: fix deadlock that raid5d() wait for itself to clear MD_SB_CHANGE_PENDING - kernel/git/stable/linux.git - Linux kernel stable treeMailing List;Patch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/3f8d5e802d4cedd445f9a89be8c3fd2d0e99024b", "ref_desc": "md/raid5: fix deadlock that raid5d() wait for itself to clear MD_SB_CHANGE_PENDING - kernel/git/stable/linux.git - Linux kernel stable treeMailing List;Patch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/b32aa95843cac6b12c2c014d40fca18aef24a347", "ref_desc": "md/raid5: fix deadlock that raid5d() wait for itself to clear MD_SB_CHANGE_PENDING - kernel/git/stable/linux.git - Linux kernel stable treeMailing List;Patch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/151f66bb618d1fd0eeb84acb61b4a9fa5d8bb0fa", "ref_desc": "md/raid5: fix deadlock that raid5d() wait for itself to clear MD_SB_CHANGE_PENDING - kernel/git/stable/linux.git - Linux kernel stable treeMailing List;Patch", "ref_cve_link": "N/A"}]}