{"CVE Code": "CVE-2024-36114", "Description": "Aircompressor is a library with ports of the Snappy, LZO, LZ4, and Zstandard compression algorithms to Java. All decompressor implementations of Aircompressor (LZ4, LZO, Snappy, Zstandard) can crash the JVM for certain input, and in some cases also leak the content of other memory of the Java process (which could contain sensitive information). When decompressing certain data, the decompressors try to access memory outside the bounds of the given byte arrays or byte buffers. Because Aircompressor uses the JDK class `sun.misc.Unsafe` to speed up memory access, no additional bounds checks are performed and this has similar security consequences as out-of-bounds access in C or C++, namely it can lead to non-deterministic behavior or crash the JVM. Users should update to Aircompressor 0.27 or newer where these issues have been fixed. When decompressing data from untrusted users, this can be exploited for a denial-of-service attack by crashing the JVM, or to leak other sensitive information from the Java process. There are no known workarounds for this issue.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-36114", "Vulnerability Categories": "Denial of service", "Affected Products": "N/A", "EPSS Score": "0.05% Probability of exploitation activity in the next 30 days\n~ 15 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n Could not find any EPSS score change records for this CVE ", "CVSS Scores": "8.6", "CWE": [{"CWE_ID": "CWE-125 Out-of-bounds Read", "CWE_link": "/cwe-details/125/Out-of-bounds-Read.html"}, {"CWE_ID": "CWE-787 Out-of-bounds Write", "CWE_link": "/cwe-details/787/Out-of-bounds-Write.html"}], "Reference": [{"ref_link": "https://github.com/airlift/aircompressor/security/advisories/GHSA-973x-65j7-xcf4", "ref_desc": "Decompressors can crash the JVM and leak memory content \u00b7 Advisory \u00b7 airlift/aircompressor \u00b7 GitHub", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/airlift/aircompressor/commit/2cea90a45534f9aacbb77426fb64e975504dee6e", "ref_desc": "Verify length is positive \u00b7 airlift/aircompressor@2cea90a \u00b7 GitHub", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/airlift/aircompressor/commit/cf66151541edb062ea88b6f3baab3f95e48b7b7f", "ref_desc": "Fix bounds checks \u00b7 airlift/aircompressor@cf66151 \u00b7 GitHub", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/airlift/aircompressor/commit/d01ecb779375a092d00e224abe7869cdf49ddc3e", "ref_desc": "Add missing bounds checks \u00b7 airlift/aircompressor@d01ecb7 \u00b7 GitHub", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/airlift/aircompressor/commit/15e68df9eb0c2bfde7f796231ee7cd1982965071", "ref_desc": "Fix out of bounds read due to negative length \u00b7 airlift/aircompressor@15e68df \u00b7 GitHub", "ref_cve_link": "N/A"}]}