{"CVE Code": "CVE-2024-32984", "Description": "Yamux is a stream multiplexer over reliable, ordered connections such as TCP/IP. The Rust implementation of the Yamux stream multiplexer uses a vector for pending frames. This vector is not bounded in length. Every time the Yamux protocol requires sending of a new frame, this frame gets appended to this vector. This can be remotely triggered in a number of ways, for example by: 1. Opening a new libp2p Identify stream. This causes the node to send its Identify message. Of course, every other protocol that causes the sending of data also works. The larger the response, the more data is enqueued. 2. Sending a Yamux Ping frame. This causes a Pong frame to be enqueued. Under normal circumstances, this queue of pending frames would be drained once they\u2019re sent out over the network. However, the attacker can use TCP\u2019s receive window mechanism to prevent the victim from sending out any data: By not reading from the TCP connection, the receive window will never be increased, and the victim won\u2019t be able to send out any new data (this is how TCP implements backpressure). Once this happens, Yamux\u2019s queue of pending frames will start growing indefinitely. The queue will only be drained once the underlying TCP connection is closed. An attacker can cause a remote node to run out of memory, which will result in the corresponding process getting terminated by the operating system.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-32984", "Vulnerability Categories": "N/A", "Affected Products": "N/A", "EPSS Score": "0.05% Probability of exploitation activity in the next 30 days\n~ 14 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n Could not find any EPSS score change records for this CVE ", "CVSS Scores": "7.5", "CWE": [{"CWE_ID": "CWE-400 Uncontrolled Resource Consumption", "CWE_link": "/cwe-details/400/Uncontrolled-Resource-Consumption.html"}], "Reference": [{"ref_link": "https://github.com/sigp/rust-yamux/commit/6689e227a48258a52347cd1d984adfc94afc6f7a", "ref_desc": "chore: introduce MAX_FRAME_BUFFER \u00b7 sigp/rust-yamux@6689e22 \u00b7 GitHub", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/libp2p/rust-yamux/blob/yamux-v0.13.1/yamux/src/connection.rs#L289", "ref_desc": "rust-yamux/yamux/src/connection.rs at yamux-v0.13.1 \u00b7 libp2p/rust-yamux \u00b7 GitHub", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/libp2p/rust-yamux/security/advisories/GHSA-3999-5ffv-wp2r", "ref_desc": "Yamux Memory Exhaustion Vulnerability via Active::pending_frames property \u00b7 Advisory \u00b7 libp2p/rust-yamux \u00b7 GitHub", "ref_cve_link": "N/A"}]}