{"CVE Code": "CVE-2024-34704", "Description": "era-compiler-solidity is the ZKsync compiler for Solidity.  The problem occurred during instruction selection in the `DAGCombine` phase while visiting the XOR operation. The issue arises when attempting to fold the expression `!(x cc y)` into `(x !cc y)`. To perform this transformation, the second operand of XOR should be a constant representing the true value. However, it was incorrectly assumed that -1 represents the true value, when in fact, 1 is the correct representation, so this transformation for this case should be skipped. This vulnerability is fixed in 1.4.1.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-34704", "Vulnerability Categories": "N/A", "Affected Products": "N/A", "EPSS Score": "0.04% Probability of exploitation activity in the next 30 days\n~ 9 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n Could not find any EPSS score change records for this CVE ", "CVSS Scores": "5.9", "CWE": [{"CWE_ID": "CWE-682 Incorrect Calculation", "CWE_link": "/cwe-details/682/Incorrect-Calculation.html"}], "Reference": [{"ref_link": "https://github.com/matter-labs/era-compiler-solidity/security/advisories/GHSA-22pj-7cvw-r3gc", "ref_desc": "`xor(zext(cmp), -1)` misoptimization \u00b7 Advisory \u00b7 matter-labs/era-compiler-solidity \u00b7 GitHub", "ref_cve_link": "N/A"}]}