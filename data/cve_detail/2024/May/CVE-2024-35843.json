{"CVE Code": "CVE-2024-35843", "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/vt-d: Use device rbtree in iopf reporting path\n\nThe existing I/O page fault handler currently locates the PCI device by\ncalling pci_get_domain_bus_and_slot(). This function searches the list\nof all PCI devices until the desired device is found. To improve lookup\nefficiency, replace it with device_rbtree_find() to search the device\nwithin the probed device rbtree.\n\nThe I/O page fault is initiated by the device, which does not have any\nsynchronization mechanism with the software to ensure that the device\nstays in the probed device tree. Theoretically, a device could be released\nby the IOMMU subsystem after device_rbtree_find() and before\niopf_get_dev_fault_param(), which would cause a use-after-free problem.\n\nAdd a mutex to synchronize the I/O page fault reporting path and the IOMMU\nrelease device path. This lock doesn't introduce any performance overhead,\nas the conflict between I/O page fault reporting and device releasing is\nvery rare.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-35843", "Vulnerability Categories": "Memory Corruption", "Affected Products": "N/A", "EPSS Score": "0.04% Probability of exploitation activity in the next 30 days\n~ 9 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n Could not find any EPSS score change records for this CVE ", "CVSS Scores": "6.8", "CWE": [{"CWE_ID": "CWE-416 Use After Free", "CWE_link": "/cwe-details/416/Use-After-Free.html"}], "Reference": [{"ref_link": "https://git.kernel.org/stable/c/def054b01a867822254e1dda13d587f5c7a99e2a", "ref_desc": "iommu/vt-d: Use device rbtree in iopf reporting path - kernel/git/stable/linux.git - Linux kernel stable tree", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/3d39238991e745c5df85785604f037f35d9d1b15", "ref_desc": "iommu/vt-d: Use device rbtree in iopf reporting path - kernel/git/stable/linux.git - Linux kernel stable tree", "ref_cve_link": "N/A"}]}