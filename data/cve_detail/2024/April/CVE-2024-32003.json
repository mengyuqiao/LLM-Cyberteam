{"CVE Code": "CVE-2024-32003", "Description": "wn-dusk-plugin (Dusk plugin) is a plugin which integrates Laravel Dusk browser testing into Winter CMS. The Dusk plugin provides some special routes as part of its testing framework to allow a browser environment (such as headless Chrome) to act as a user in the Backend or User plugin without having to go through authentication. This route is `[[URL]]/_dusk/login/[[USER ID]]/[[MANAGER]]` - where `[[URL]]` is the base URL of the site, `[[USER ID]]` is the ID of the user account and `[[MANAGER]]` is the authentication manager (either `backend` for Backend, or `user` for the User plugin). If a configuration of a site using the Dusk plugin is set up in such a way that the Dusk plugin is available publicly and the test cases in Dusk are run with live data, this route may potentially be used to gain access to any user account in either the Backend or User plugin without authentication. As indicated in the `README`, this plugin should only be used in development and should *NOT* be used in a production instance. It is specifically recommended that the plugin be installed as a development dependency only in Composer. In order to remediate this issue, the special routes used above will now no longer be registered unless the `APP_ENV` environment variable is specifically set to `dusk`. Since Winter by default does not use this environment variable and it is not populated by default, it will only exist if Dusk's automatic configuration is used (which won't exhibit this vulnerability) or if a developer manually specifies it in their configuration. The automatic configuration performed by the Dusk plugin has also been hardened by default to use sane defaults and not allow external environment variables to leak into this configuration. This will only affect users in which the Winter CMS installation meets ALL the following criteria: 1. The Dusk plugin is installed in the Winter CMS instance. 2. The application is in production mode (ie. the `debug` config value is set to `true` in `config/app.php`). 3. The Dusk plugin's automatic configuration has been overridden, either by providing a custom `.env.dusk` file or by providing custom configuration in the `config/dusk` folder, or by providing configuration environment variables externally. 4. The environment has been configured to use production data in the database for testing, and not the temporary SQLite database that Dusk uses by default. 5. The application is connectable via the web. This issue has been fixed in version 2.1.0. Users are advised to upgrade.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-32003", "Vulnerability Categories": "N/A", "Affected Products": "N/A", "EPSS Score": "0.04% Probability of exploitation activity in the next 30 days\n~ 9 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n Could not find any EPSS score change records for this CVE ", "CVSS Scores": "8.8", "CWE": [{"CWE_ID": "CWE-269 Improper Privilege Management", "CWE_link": "/cwe-details/269/Improper-Privilege-Management.html"}], "Reference": [{"ref_link": "https://github.com/wintercms/wn-dusk-plugin/security/advisories/GHSA-chcp-g9j5-3xxx", "ref_desc": "Dusk plugin may allow unfettered user authentication in misconfigured installs \u00b7 Advisory \u00b7 wintercms/wn-dusk-plugin \u00b7 GitHub", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/wintercms/wn-dusk-plugin/blob/main/README.md", "ref_desc": "wn-dusk-plugin/README.md at main \u00b7 wintercms/wn-dusk-plugin \u00b7 GitHub", "ref_cve_link": "N/A"}]}