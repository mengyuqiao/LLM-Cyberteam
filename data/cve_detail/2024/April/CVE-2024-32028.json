{"CVE Code": "CVE-2024-32028", "Description": "OpenTelemetry dotnet is a dotnet telemetry framework. In affected versions of `OpenTelemetry.Instrumentation.Http` and `OpenTelemetry.Instrumentation.AspNetCore` the `url.full` writes attribute/tag on spans (`Activity`) when tracing is enabled for outgoing http requests and `OpenTelemetry.Instrumentation.AspNetCore` writes the `url.query` attribute/tag on spans (`Activity`) when tracing is enabled for incoming http requests. These attributes are defined by the Semantic Conventions for HTTP Spans. Up until version `1.8.1` the values written by `OpenTelemetry.Instrumentation.Http` & `OpenTelemetry.Instrumentation.AspNetCore` will pass-through the raw query string as was sent or received (respectively). This may lead to sensitive information (e.g. EUII - End User Identifiable Information, credentials, etc.) being leaked into telemetry backends (depending on the application(s) being instrumented) which could cause privacy and/or security incidents. Note: Older versions of `OpenTelemetry.Instrumentation.Http` & `OpenTelemetry.Instrumentation.AspNetCore` may use different tag names but have the same vulnerability. The `1.8.1` versions of `OpenTelemetry.Instrumentation.Http` & `OpenTelemetry.Instrumentation.AspNetCore` will now redact by default all values detected on transmitted or received query strings. Users are advised to upgrade. There are no known workarounds for this vulnerability.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-32028", "Vulnerability Categories": "N/A", "Affected Products": "N/A", "EPSS Score": "0.05% Probability of exploitation activity in the next 30 days\n~ 15 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n Could not find any EPSS score change records for this CVE ", "CVSS Scores": "4.1", "CWE": [{"CWE_ID": "CWE-201 Insertion of Sensitive Information Into Sent Data", "CWE_link": "/cwe-details/201/Insertion-of-Sensitive-Information-Into-Sent-Data.html"}, {"CWE_ID": "CWE-212 Improper Removal of Sensitive Information Before Storage or Transfer", "CWE_link": "/cwe-details/212/Improper-Removal-of-Sensitive-Information-Before-Storage-or-.html"}], "Reference": [{"ref_link": "https://github.com/open-telemetry/semantic-conventions/blob/main/docs/http/http-spans.md", "ref_desc": "semantic-conventions/docs/http/http-spans.md at main \u00b7 open-telemetry/semantic-conventions \u00b7 GitHub", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/open-telemetry/opentelemetry-dotnet/commit/e222ecb5942d4ce1cadfd4306c39e3f4933a5c42", "ref_desc": "[Instrumentation.Http][Instrumentation.AspNetCore] Fix `url.full` and\u2026 \u00b7 open-telemetry/opentelemetry-dotnet@e222ecb \u00b7 GitHub", "ref_cve_link": "N/A"}, {"ref_link": "https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-vh2m-22xx-q94f", "ref_desc": "OpenTelemetry.Instrumentation.Http & OpenTelemetry.Instrumentation.AspNetCore packages log potentially sensitive query string parameters by default \u00b7 Advisory \u00b7 open-telemetry/opentelemetry-dotnet \u00b7 G", "ref_cve_link": "N/A"}]}