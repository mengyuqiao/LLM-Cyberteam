{"CVE Code": "CVE-2024-32477", "Description": "Deno is a JavaScript, TypeScript, and WebAssembly runtime with secure defaults. By using ANSI escape sequences and a race between `libc::tcflush(0, libc::TCIFLUSH)` and reading standard input, it's possible to manipulate the permission prompt and force it to allow an unsafe action regardless of the user input. Some ANSI escape sequences act as a info request to the master terminal emulator and the terminal emulator sends back the reply in the PTY channel. standard streams also use this channel to send and get data. For example the `\\033[6n` sequence requests the current cursor position. These sequences allow us to append data to the standard input of Deno. This vulnerability allows an attacker to bypass Deno permission policy.  This vulnerability is fixed in 1.42.2.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-32477", "Vulnerability Categories": "N/A", "Affected Products": "N/A", "EPSS Score": "0.04% Probability of exploitation activity in the next 30 days\n~ 9 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n Could not find any EPSS score change records for this CVE ", "CVSS Scores": "7.7", "CWE": [{"CWE_ID": "CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "CWE_link": "/cwe-details/78/Improper-Neutralization-of-Special-Elements-used-in-an-OS-Co.html"}, {"CWE_ID": "CWE-362 Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')", "CWE_link": "/cwe-details/362/Concurrent-Execution-using-Shared-Resource-with-Improper-Syn.html"}], "Reference": [{"ref_link": "https://github.com/denoland/deno/security/advisories/GHSA-95cj-3hr2-7j5j", "ref_desc": "Race condition when flushing input stream leads to permission prompt bypass \u00b7 Advisory \u00b7 denoland/deno \u00b7 GitHub", "ref_cve_link": "N/A"}]}