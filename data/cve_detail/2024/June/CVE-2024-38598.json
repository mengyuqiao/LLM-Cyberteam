{"CVE Code": "CVE-2024-38598", "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: fix resync softlockup when bitmap size is less than array size\n\nIs is reported that for dm-raid10, lvextend + lvchange --syncaction will\ntrigger following softlockup:\n\nkernel:watchdog: BUG: soft lockup - CPU#3 stuck for 26s! [mdX_resync:6976]\nCPU: 7 PID: 3588 Comm: mdX_resync Kdump: loaded Not tainted 6.9.0-rc4-next-20240419 #1\nRIP: 0010:_raw_spin_unlock_irq+0x13/0x30\nCall Trace:\n <TASK>\n md_bitmap_start_sync+0x6b/0xf0\n raid10_sync_request+0x25c/0x1b40 [raid10]\n md_do_sync+0x64b/0x1020\n md_thread+0xa7/0x170\n kthread+0xcf/0x100\n ret_from_fork+0x30/0x50\n ret_from_fork_asm+0x1a/0x30\n\nAnd the detailed process is as follows:\n\nmd_do_sync\n j = mddev->resync_min\n while (j < max_sectors)\n  sectors = raid10_sync_request(mddev, j, &skipped)\n   if (!md_bitmap_start_sync(..., &sync_blocks))\n    // md_bitmap_start_sync set sync_blocks to 0\n    return sync_blocks + sectors_skippe;\n  // sectors = 0;\n  j += sectors;\n  // j never change\n\nRoot cause is that commit 301867b1c168 (\"md/raid10: check\nslab-out-of-bounds in md_bitmap_get_counter\") return early from\nmd_bitmap_get_counter(), without setting returned blocks.\n\nFix this problem by always set returned blocks from\nmd_bitmap_get_counter\"(), as it used to be.\n\nNoted that this patch just fix the softlockup problem in kernel, the\ncase that bitmap size doesn't match array size still need to be fixed.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-38598", "Vulnerability Categories": "N/A", "Affected Products": "\nLinux\u00bbLinux KernelVersions  from including (>=) 5.10.188andbefore (<) 5.10.219cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.5andbefore (<) 6.6.33cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 5.15.121andbefore (<) 5.15.161cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 5.4.251andbefore (<) 5.4.278cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.7andbefore (<) 6.8.12cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.1.39andbefore (<) 6.1.93cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 4.19.291andbefore (<) 4.19.316cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.9andbefore (<) 6.9.3cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.04% Probability of exploitation activity in the next 30 days\n~ 5 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-08-28  0.04%  0.04%  0.00 ", "CVSS Scores": "5.5", "CWE": [{"CWE_ID": "CWE-667 Improper Locking", "CWE_link": "/cwe-details/667/Improper-Locking.html"}], "Reference": [{"ref_link": "https://git.kernel.org/stable/c/43771597feba89a839c5f893716df88ae5c237ce", "ref_desc": "md: fix resync softlockup when bitmap size is less than array size - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/f0e729af2eb6bee9eb58c4df1087f14ebaefe26b", "ref_desc": "md: fix resync softlockup when bitmap size is less than array size - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/69296914bfd508c85935bf5f711cad9b0fe78492", "ref_desc": "md: fix resync softlockup when bitmap size is less than array size - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/3f5b73ef8fd6268cbc968b308d8eafe56fda97f3", "ref_desc": "md: fix resync softlockup when bitmap size is less than array size - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html", "ref_desc": "[SECURITY] [DLA 3840-1] linux security updateCVEs referencing this url", "ref_cve_link": "https://www.cvedetails.com/reference-url-info/GGUpLqB4P6Z8f7wqSGvgXJutRf8.html"}, {"ref_link": "https://git.kernel.org/stable/c/5817f43ae1a118855676f57ef7ab50e37eac7482", "ref_desc": "md: fix resync softlockup when bitmap size is less than array size - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/d4b9c764d48fa41caa24cfb4275f3aa9fb4bd798", "ref_desc": "md: fix resync softlockup when bitmap size is less than array size - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/c9566b812c8f66160466cc1e29df6d3646add0b1", "ref_desc": "md: fix resync softlockup when bitmap size is less than array size - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/71e8e4f288e74a896b6d9cd194f3bab12bd7a10f", "ref_desc": "md: fix resync softlockup when bitmap size is less than array size - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/8bbc71315e0ae4bb7e37f8d43b915e1cb01a481b", "ref_desc": "md: fix resync softlockup when bitmap size is less than array size - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}]}