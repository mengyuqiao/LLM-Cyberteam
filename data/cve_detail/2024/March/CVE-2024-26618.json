{"CVE Code": "CVE-2024-26618", "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64/sme: Always exit sme_alloc() early with existing storage\n\nWhen sme_alloc() is called with existing storage and we are not flushing we\nwill always allocate new storage, both leaking the existing storage and\ncorrupting the state. Fix this by separating the checks for flushing and\nfor existing storage as we do for SVE.\n\nCallers that reallocate (eg, due to changing the vector length) should\ncall sme_free() themselves.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-26618", "Vulnerability Categories": "N/A", "Affected Products": "N/A", "EPSS Score": "0.05% Probability of exploitation activity in the next 30 days\n~ 15 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n Could not find any EPSS score change records for this CVE ", "CVSS Scores": "N/A", "CWE": [], "Reference": [{"ref_link": "https://git.kernel.org/stable/c/569156e4fa347237f8fa2a7e935d860109c55ac4", "ref_desc": "arm64/sme: Always exit sme_alloc() early with existing storage - kernel/git/stable/linux.git - Linux kernel stable tree", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/dc7eb8755797ed41a0d1b5c0c39df3c8f401b3d9", "ref_desc": "arm64/sme: Always exit sme_alloc() early with existing storage - kernel/git/stable/linux.git - Linux kernel stable tree", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/814af6b4e6000e574e74d92197190edf07cc3680", "ref_desc": "arm64/sme: Always exit sme_alloc() early with existing storage - kernel/git/stable/linux.git - Linux kernel stable tree", "ref_cve_link": "N/A"}]}