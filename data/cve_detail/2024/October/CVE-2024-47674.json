{"CVE Code": "CVE-2024-47674", "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: avoid leaving partial pfn mappings around in error case\n\nAs Jann points out, PFN mappings are special, because unlike normal\nmemory mappings, there is no lifetime information associated with the\nmapping - it is just a raw mapping of PFNs with no reference counting of\na 'struct page'.\n\nThat's all very much intentional, but it does mean that it's easy to\nmess up the cleanup in case of errors.  Yes, a failed mmap() will always\neventually clean up any partial mappings, but without any explicit\nlifetime in the page table mapping itself, it's very easy to do the\nerror handling in the wrong order.\n\nIn particular, it's easy to mistakenly free the physical backing store\nbefore the page tables are actually cleaned up and (temporarily) have\nstale dangling PTE entries.\n\nTo make this situation less error-prone, just make sure that any partial\npfn mapping is torn down early, before any other error handling.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-47674", "Vulnerability Categories": "N/A", "Affected Products": "\nLinux\u00bbLinux KernelVersions  from including (>=) 6.2andbefore (<) 6.6.52cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  before (<) 5.15.168cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.7andbefore (<) 6.10.11cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 5.16andbefore (<) 6.1.111cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.11UpdateRC1cpe:2.3:o:linux:linux_kernel:6.11:rc1:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.11UpdateRC2cpe:2.3:o:linux:linux_kernel:6.11:rc2:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.11UpdateRC3cpe:2.3:o:linux:linux_kernel:6.11:rc3:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.11UpdateRC4cpe:2.3:o:linux:linux_kernel:6.11:rc4:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.11UpdateRC5cpe:2.3:o:linux:linux_kernel:6.11:rc5:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.11UpdateRC6cpe:2.3:o:linux:linux_kernel:6.11:rc6:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.11UpdateRC7cpe:2.3:o:linux:linux_kernel:6.11:rc7:*:*:*:*:*:*Matching versions", "EPSS Score": "0.04% Probability of exploitation activity in the next 30 days\n~ 5 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-10-19  0.05%  0.04%  0.00 ", "CVSS Scores": "5.5", "CWE": [{"CWE_ID": "CWE-459 Incomplete Cleanup", "CWE_link": "/cwe-details/459/Incomplete-Cleanup.html"}], "Reference": [{"ref_link": "https://git.kernel.org/stable/c/3213fdcab961026203dd587a4533600c70b3336b", "ref_desc": "mm: avoid leaving partial pfn mappings around in error case - kernel/git/stable/linux.git - Linux kernel stable tree", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/65d0db500d7c07f0f76fc24a4d837791c4862cd2", "ref_desc": "mm: avoid leaving partial pfn mappings around in error case - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/5b2c8b34f6d76bfbd1dd4936eb8a0fbfb9af3959", "ref_desc": "mm: avoid leaving partial pfn mappings around in error case - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/79a61cc3fc0466ad2b7b89618a6157785f0293b3", "ref_desc": "mm: avoid leaving partial pfn mappings around in error case - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/35770ca6180caa24a2b258c99a87bd437a1ee10f", "ref_desc": "mm: avoid leaving partial pfn mappings around in error case - kernel/git/stable/linux.git - Linux kernel stable tree", "ref_cve_link": "N/A"}, {"ref_link": "https://project-zero.issues.chromium.org/issues/366053091", "ref_desc": "Linux: temporarily dangling PFN mapping on remap_pfn_range() failure in usbdev_mmap() (and elsewhere?) [366053091] - Project Zero", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/a95a24fcaee1b892e47d5e6dcc403f713874ee80", "ref_desc": "mm: avoid leaving partial pfn mappings around in error case - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/954fd4c81f22c4b6ba65379a81fd252971bf4ef3", "ref_desc": "mm: avoid leaving partial pfn mappings around in error case - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}]}