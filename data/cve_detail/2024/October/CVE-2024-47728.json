{"CVE Code": "CVE-2024-47728", "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Zero former ARG_PTR_TO_{LONG,INT} args in case of error\n\nFor all non-tracing helpers which formerly had ARG_PTR_TO_{LONG,INT} as input\narguments, zero the value for the case of an error as otherwise it could leak\nmemory. For tracing, it is not needed given CAP_PERFMON can already read all\nkernel memory anyway hence bpf_get_func_arg() and bpf_get_func_ret() is skipped\nin here.\n\nAlso, the MTU helpers mtu_len pointer value is being written but also read.\nTechnically, the MEM_UNINIT should not be there in order to always force init.\nRemoving MEM_UNINIT needs more verifier rework though: MEM_UNINIT right now\nimplies two things actually: i) write into memory, ii) memory does not have\nto be initialized. If we lift MEM_UNINIT, it then becomes: i) read into memory,\nii) memory must be initialized. This means that for bpf_*_check_mtu() we're\nreadding the issue we're trying to fix, that is, it would then be able to\nwrite back into things like .rodata BPF maps. Follow-up work will rework the\nMEM_UNINIT semantics such that the intent can be better expressed. For now\njust clear the *mtu_len on error path which can be lifted later again.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-47728", "Vulnerability Categories": "N/A", "Affected Products": "\nLinux\u00bbLinux KernelVersions  from including (>=) 5.2andbefore (<) 6.1.113cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.11andbefore (<) 6.11.2cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.7andbefore (<) 6.10.13cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.2andbefore (<) 6.6.54cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.04% Probability of exploitation activity in the next 30 days\n~ 5 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-10-24  0.05%  0.04%  0.00 ", "CVSS Scores": "5.5", "CWE": [{"CWE_ID": "CWE-459 Incomplete Cleanup", "CWE_link": "/cwe-details/459/Incomplete-Cleanup.html"}], "Reference": [{"ref_link": "https://git.kernel.org/stable/c/8397bf78988f3ae9dbebb0200189a62a57264980", "ref_desc": "bpf: Zero former ARG_PTR_TO_{LONG,INT} args in case of error - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/599d15b6d03356a97bff7a76155c5604c42a2962", "ref_desc": "bpf: Zero former ARG_PTR_TO_{LONG,INT} args in case of error - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/a634fa8e480ac2423f86311a602f6295df2c8ed0", "ref_desc": "bpf: Zero former ARG_PTR_TO_{LONG,INT} args in case of error - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/4b3786a6c5397dc220b1483d8e2f4867743e966f", "ref_desc": "bpf: Zero former ARG_PTR_TO_{LONG,INT} args in case of error - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/594a9f5a8d2de2573a856e506f77ba7dd2cefc6a", "ref_desc": "bpf: Zero former ARG_PTR_TO_{LONG,INT} args in case of error - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}]}