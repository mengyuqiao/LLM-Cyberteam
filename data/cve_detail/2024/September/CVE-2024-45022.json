{"CVE Code": "CVE-2024-45022", "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/vmalloc: fix page mapping if vm_area_alloc_pages() with high order fallback to order 0\n\nThe __vmap_pages_range_noflush() assumes its argument pages** contains\npages with the same page shift.  However, since commit e9c3cda4d86e (\"mm,\nvmalloc: fix high order __GFP_NOFAIL allocations\"), if gfp_flags includes\n__GFP_NOFAIL with high order in vm_area_alloc_pages() and page allocation\nfailed for high order, the pages** may contain two different page shifts\n(high order and order-0).  This could lead __vmap_pages_range_noflush() to\nperform incorrect mappings, potentially resulting in memory corruption.\n\nUsers might encounter this as follows (vmap_allow_huge = true, 2M is for\nPMD_SIZE):\n\nkvmalloc(2M, __GFP_NOFAIL|GFP_X)\n    __vmalloc_node_range_noprof(vm_flags=VM_ALLOW_HUGE_VMAP)\n        vm_area_alloc_pages(order=9) ---> order-9 allocation failed and fallback to order-0\n            vmap_pages_range()\n                vmap_pages_range_noflush()\n                    __vmap_pages_range_noflush(page_shift = 21) ----> wrong mapping happens\n\nWe can remove the fallback code because if a high-order allocation fails,\n__vmalloc_node_range_noprof() will retry with order-0.  Therefore, it is\nunnecessary to fallback to order-0 here.  Therefore, fix this by removing\nthe fallback code.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-45022", "Vulnerability Categories": "Memory Corruption", "Affected Products": "\nLinux\u00bbLinux KernelVersions  from including (>=) 6.3andbefore (<) 6.6.48cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.7andbefore (<) 6.10.7cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.1.95andbefore (<) 6.1.107cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.11UpdateRC1cpe:2.3:o:linux:linux_kernel:6.11:rc1:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.11UpdateRC2cpe:2.3:o:linux:linux_kernel:6.11:rc2:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.11UpdateRC3cpe:2.3:o:linux:linux_kernel:6.11:rc3:*:*:*:*:*:*Matching versions", "EPSS Score": "0.04% Probability of exploitation activity in the next 30 days\n~ 5 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-09-14  0.05%  0.04%  0.00 ", "CVSS Scores": "5.5", "CWE": [{"CWE_ID": "CWE-787 Out-of-bounds Write", "CWE_link": "/cwe-details/787/Out-of-bounds-Write.html"}], "Reference": [{"ref_link": "https://git.kernel.org/stable/c/de7bad86345c43cd040ed43e20d9fad78a3ee59f", "ref_desc": "mm/vmalloc: fix page mapping if vm_area_alloc_pages() with high order fallback to order 0 - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/61ebe5a747da649057c37be1c37eb934b4af79ca", "ref_desc": "mm/vmalloc: fix page mapping if vm_area_alloc_pages() with high order fallback to order 0 - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/fd1ffbb50ef4da5e1378a46616b6d7407dc795da", "ref_desc": "mm/vmalloc: fix page mapping if vm_area_alloc_pages() with high order fallback to order 0 - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/c91618816f4d21fc574d7577a37722adcd4075b2", "ref_desc": "mm/vmalloc: fix page mapping if vm_area_alloc_pages() with high order fallback to order 0 - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}]}