{"CVE Code": "CVE-2024-24002", "Description": "jshERP v3.3 is vulnerable to SQL Injection. The com.jsh.erp.controller.MaterialController: com.jsh.erp.utils.BaseResponseInfo getListWithStock() function of jshERP does not filter `column` and `order` parameters well enough, and an attacker can construct malicious payload to bypass jshERP's protection mechanism in `safeSqlParse` method for sql injection.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-24002", "Vulnerability Categories": "Sql Injection", "Affected Products": "\nJishenghua\u00bbJsherp\u00bbVersion:3.3cpe:2.3:a:jishenghua:jsherp:3.3:*:*:*:*:*:*:*Matching versions", "EPSS Score": "0.08% Probability of exploitation activity in the next 30 days\n~ 31 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n Could not find any EPSS score change records for this CVE ", "CVSS Scores": "9.8", "CWE": [{"CWE_ID": "CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "CWE_link": "/cwe-details/89/Improper-Neutralization-of-Special-Elements-used-in-an-SQL-C.html"}], "Reference": [{"ref_link": "https://github.com/jishenghua/jshERP/issues/99", "ref_desc": "There are 4 sql injection vulnerabilities and 1 file upload vulnerability in jshERP v3.3 \u00b7 Issue #99 \u00b7 jishenghua/jshERP \u00b7 GitHubExploit;Vendor AdvisoryCVEs referencing this url", "ref_cve_link": "https://www.cvedetails.com/reference-url-info/basGrfWQ0-HXzv_DhgUUWqCd8q0.html"}, {"ref_link": "https://github.com/cxcxcxcxcxcxcxc/cxcxcxcxcxcxcxc/blob/main/cxcxcxcxcxc/about-2024/24002.txt", "ref_desc": "cxcxcxcxcxcxcxc/cxcxcxcxcxc/about-2024/24002.txt at main \u00b7 cxcxcxcxcxcxcxc/cxcxcxcxcxcxcxc \u00b7 GitHubThird Party Advisory", "ref_cve_link": "N/A"}]}