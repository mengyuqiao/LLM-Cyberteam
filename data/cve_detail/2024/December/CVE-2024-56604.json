{"CVE Code": "CVE-2024-56604", "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: RFCOMM: avoid leaving dangling sk pointer in rfcomm_sock_alloc()\n\nbt_sock_alloc() attaches allocated sk object to the provided sock object.\nIf rfcomm_dlc_alloc() fails, we release the sk object, but leave the\ndangling pointer in the sock object, which may cause use-after-free.\n\nFix this by swapping calls to bt_sock_alloc() and rfcomm_dlc_alloc().", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-56604", "Vulnerability Categories": "Memory Corruption", "Affected Products": "N/A", "EPSS Score": "0.05% Probability of exploitation activity in the next 30 days\n~ 17 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n Could not find any EPSS score change records for this CVE ", "CVSS Scores": "N/A", "CWE": [], "Reference": [{"ref_link": "https://git.kernel.org/stable/c/32df687e129ef0f9afcbcc914f7c32deb28fd481", "ref_desc": "Bluetooth: RFCOMM: avoid leaving dangling sk pointer in rfcomm_sock_alloc() - kernel/git/stable/linux.git - Linux kernel stable tree", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/3945c799f12b8d1f49a3b48369ca494d981ac465", "ref_desc": "Bluetooth: RFCOMM: avoid leaving dangling sk pointer in rfcomm_sock_alloc() - kernel/git/stable/linux.git - Linux kernel stable tree", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/ac3eaac4cf142a15fe67be747a682b1416efeb6e", "ref_desc": "", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/6021ccc2471b7b95e29b7cfc7938e042bf56e281", "ref_desc": "Bluetooth: RFCOMM: avoid leaving dangling sk pointer in rfcomm_sock_alloc() - kernel/git/stable/linux.git - Linux kernel stable tree", "ref_cve_link": "N/A"}]}