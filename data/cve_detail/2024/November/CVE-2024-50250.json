{"CVE Code": "CVE-2024-50250", "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfsdax: dax_unshare_iter needs to copy entire blocks\n\nThe code that copies data from srcmap to iomap in dax_unshare_iter is\nvery very broken, which bfoster's recent fsx changes have exposed.\n\nIf the pos and len passed to dax_file_unshare are not aligned to an\nfsblock boundary, the iter pos and length in the _iter function will\nreflect this unalignment.\n\ndax_iomap_direct_access always returns a pointer to the start of the\nkmapped fsdax page, even if its pos argument is in the middle of that\npage.  This is catastrophic for data integrity when iter->pos is not\naligned to a page, because daddr/saddr do not point to the same byte in\nthe file as iter->pos.  Hence we corrupt user data by copying it to the\nwrong place.\n\nIf iter->pos + iomap_length() in the _iter function not aligned to a\npage, then we fail to copy a full block, and only partially populate the\ndestination block.  This is catastrophic for data confidentiality\nbecause we expose stale pmem contents.\n\nFix both of these issues by aligning copy_pos/copy_len to a page\nboundary (remember, this is fsdax so 1 fsblock == 1 base page) so that\nwe always copy full blocks.\n\nWe're not done yet -- there's no call to invalidate_inode_pages2_range,\nso programs that have the file range mmap'd will continue accessing the\nold memory mapping after the file metadata updates have completed.\n\nBe careful with the return value -- if the unshare succeeds, we still\nneed to return the number of bytes that the iomap iter thinks we're\noperating on.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-50250", "Vulnerability Categories": "N/A", "Affected Products": "\nLinux\u00bbLinux KernelVersions  from including (>=) 6.1.113andbefore (<) 6.1.116cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.2andbefore (<) 6.6.60cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.7andbefore (<) 6.11.7cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.12UpdateRC1cpe:2.3:o:linux:linux_kernel:6.12:rc1:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.12UpdateRC2cpe:2.3:o:linux:linux_kernel:6.12:rc2:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.12UpdateRC3cpe:2.3:o:linux:linux_kernel:6.12:rc3:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.12UpdateRC4cpe:2.3:o:linux:linux_kernel:6.12:rc4:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.12UpdateRC5cpe:2.3:o:linux:linux_kernel:6.12:rc5:*:*:*:*:*:*Matching versions", "EPSS Score": "0.05% Probability of exploitation activity in the next 30 days\n~ 17 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n Could not find any EPSS score change records for this CVE ", "CVSS Scores": "7.1", "CWE": [], "Reference": [{"ref_link": "https://git.kernel.org/stable/c/8e9c0f500b42216ef930f5c0d1703989a451913d", "ref_desc": "fsdax: dax_unshare_iter needs to copy entire blocks - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/bdbc96c23197d773a7d1bf03e4f11de593b0ff28", "ref_desc": "fsdax: dax_unshare_iter needs to copy entire blocks - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/50793801fc7f6d08def48754fb0f0706b0cfc394", "ref_desc": "fsdax: dax_unshare_iter needs to copy entire blocks - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/9bc18bb476e50e32e5d08f2734d63d63e0fa528c", "ref_desc": "fsdax: dax_unshare_iter needs to copy entire blocks - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}]}