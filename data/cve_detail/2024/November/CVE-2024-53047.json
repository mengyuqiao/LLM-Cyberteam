{"CVE Code": "CVE-2024-53047", "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: init: protect sched with rcu_read_lock\n\nEnabling CONFIG_PROVE_RCU_LIST with its dependence CONFIG_RCU_EXPERT\ncreates this splat when an MPTCP socket is created:\n\n  =============================\n  WARNING: suspicious RCU usage\n  6.12.0-rc2+ #11 Not tainted\n  -----------------------------\n  net/mptcp/sched.c:44 RCU-list traversed in non-reader section!!\n\n  other info that might help us debug this:\n\n  rcu_scheduler_active = 2, debug_locks = 1\n  no locks held by mptcp_connect/176.\n\n  stack backtrace:\n  CPU: 0 UID: 0 PID: 176 Comm: mptcp_connect Not tainted 6.12.0-rc2+ #11\n  Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011\n  Call Trace:\n   <TASK>\n   dump_stack_lvl (lib/dump_stack.c:123)\n   lockdep_rcu_suspicious (kernel/locking/lockdep.c:6822)\n   mptcp_sched_find (net/mptcp/sched.c:44 (discriminator 7))\n   mptcp_init_sock (net/mptcp/protocol.c:2867 (discriminator 1))\n   ? sock_init_data_uid (arch/x86/include/asm/atomic.h:28)\n   inet_create.part.0.constprop.0 (net/ipv4/af_inet.c:386)\n   ? __sock_create (include/linux/rcupdate.h:347 (discriminator 1))\n   __sock_create (net/socket.c:1576)\n   __sys_socket (net/socket.c:1671)\n   ? __pfx___sys_socket (net/socket.c:1712)\n   ? do_user_addr_fault (arch/x86/mm/fault.c:1419 (discriminator 1))\n   __x64_sys_socket (net/socket.c:1728)\n   do_syscall_64 (arch/x86/entry/common.c:52 (discriminator 1))\n   entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\nThat's because when the socket is initialised, rcu_read_lock() is not\nused despite the explicit comment written above the declaration of\nmptcp_sched_find() in sched.c. Adding the missing lock/unlock avoids the\nwarning.", "NVD Link": "https://nvd.nist.gov/vuln/detail/CVE-2024-53047", "Vulnerability Categories": "N/A", "Affected Products": "\nLinux\u00bbLinux KernelVersions  from including (>=) 6.6andbefore (<) 6.6.60cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux KernelVersions  from including (>=) 6.7andbefore (<) 6.11.7cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.12UpdateRC1cpe:2.3:o:linux:linux_kernel:6.12:rc1:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.12UpdateRC2cpe:2.3:o:linux:linux_kernel:6.12:rc2:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.12UpdateRC3cpe:2.3:o:linux:linux_kernel:6.12:rc3:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.12UpdateRC4cpe:2.3:o:linux:linux_kernel:6.12:rc4:*:*:*:*:*:*Matching versions\nLinux\u00bbLinux Kernel\u00bbVersion:6.12UpdateRC5cpe:2.3:o:linux:linux_kernel:6.12:rc5:*:*:*:*:*:*Matching versions", "EPSS Score": "0.04% Probability of exploitation activity in the next 30 days\n~ 5 % Percentile, the proportion of vulnerabilities that are scored at or less", "EPSS History": "\n #  Date  Old EPSS Score  New EPSS Score  Delta (New - Old) \n 1  2024-12-17  0.05%  0.04%  0.00 ", "CVSS Scores": "5.5", "CWE": [{"CWE_ID": "CWE-667 Improper Locking", "CWE_link": "/cwe-details/667/Improper-Locking.html"}], "Reference": [{"ref_link": "https://git.kernel.org/stable/c/3deb12c788c385e17142ce6ec50f769852fcec65", "ref_desc": "mptcp: init: protect sched with rcu_read_lock - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/cb8b81ad3e893a6d18dcdd3754cc2ea2a42c0136", "ref_desc": "mptcp: init: protect sched with rcu_read_lock - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}, {"ref_link": "https://git.kernel.org/stable/c/494eb22f9a7bd03783e60595a57611c209175f1a", "ref_desc": "mptcp: init: protect sched with rcu_read_lock - kernel/git/stable/linux.git - Linux kernel stable treePatch", "ref_cve_link": "N/A"}]}